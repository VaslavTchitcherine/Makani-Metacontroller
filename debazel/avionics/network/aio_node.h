#ifndef AVIONICS_NETWORK_AIO_NODE_H_
#define AVIONICS_NETWORK_AIO_NODE_H_

// Generated by generate_aio_node.py; do not edit.

#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
  kAioNodeForceSigned = -1,
  kAioNodeUnknown = 0,  // Reserved.  Default AioNode for invalid configuration.
  kAioNodeBattA = 1,
  kAioNodeBattB = 2,
  kAioNodeCmdFlightSpare = 3,
  kAioNodeCmdLoggerA = 4,
  kAioNodeCmdLoggerB = 5,
  kAioNodeCmdWebmonitor = 6,
  kAioNodeControllerA = 7,
  kAioNodeControllerB = 8,
  kAioNodeControllerC = 9,
  kAioNodeCsA = 10,
  kAioNodeCsB = 11,
  kAioNodeCsDynoA = 12,
  kAioNodeCsDynoB = 13,
  kAioNodeCsGsA = 14,
  kAioNodeCsGsB = 15,
  kAioNodeDrumSensorsA = 16,
  kAioNodeDrumSensorsB = 17,
  kAioNodeDynoMotorSbo = 18,
  kAioNodeDynoMotorSbi = 19,
  kAioNodeDynoMotorPbi = 20,
  kAioNodeDynoMotorPbo = 21,
  kAioNodeDynoMotorPto = 22,
  kAioNodeDynoMotorPti = 23,
  kAioNodeDynoMotorSti = 24,
  kAioNodeDynoMotorSto = 25,
  kAioNodeEopGsB = 26,
  kAioNodeEopWingB = 27,
  kAioNodeFcA = 28,
  kAioNodeFcB = 29,
  kAioNodeFcC = 30,
  kAioNodeGpsBaseStation = 31,
  kAioNodeGroundPowerQ7A = 32,
  kAioNodeGroundPowerTms570A = 33,
  kAioNodeGsEstimator = 34,
  kAioNodeJoystickA = 35,
  kAioNodeLightPort = 36,
  kAioNodeLightStbd = 37,
  kAioNodeLightTailBottom = 38,
  kAioNodeLightTailTop = 39,
  kAioNodeLoadcellPortA = 40,
  kAioNodeLoadcellPortB = 41,
  kAioNodeLoadcellStarboardA = 42,
  kAioNodeLoadcellStarboardB = 43,
  kAioNodeMotorSbo = 44,
  kAioNodeMotorSbi = 45,
  kAioNodeMotorPbi = 46,
  kAioNodeMotorPbo = 47,
  kAioNodeMotorPto = 48,
  kAioNodeMotorPti = 49,
  kAioNodeMotorSti = 50,
  kAioNodeMotorSto = 51,
  kAioNodeMvlv = 52,
  kAioNodeOperator = 53,
  kAioNodePlatformSensorsA = 54,
  kAioNodePlatformSensorsB = 55,
  kAioNodePlcGs02 = 56,
  kAioNodePlcTophat = 57,
  kAioNodeRecorderQ7Platform = 58,
  kAioNodeRecorderQ7Wing = 59,
  kAioNodeRecorderTms570Platform = 60,
  kAioNodeRecorderTms570Wing = 61,
  kAioNodeServoA1 = 62,
  kAioNodeServoA2 = 63,
  kAioNodeServoA4 = 64,
  kAioNodeServoA5 = 65,
  kAioNodeServoA7 = 66,
  kAioNodeServoA8 = 67,
  kAioNodeServoE1 = 68,
  kAioNodeServoE2 = 69,
  kAioNodeServoR1 = 70,
  kAioNodeServoR2 = 71,
  kAioNodeShortStack = 72,
  kAioNodeSimulatedJoystick = 73,
  kAioNodeSimulator = 74,
  kAioNodeTelemetrySnapshot = 75,
  kAioNodeTorqueCell = 76,
  kAioNodeUwbA = 77,
  kAioNodeUwbB = 78,
  kAioNodeUwbC = 79,
  kAioNodeUwbD = 80,
  kAioNodeVisualizer = 81,
  kNumAioNodes
} AioNode;

const char *AioNodeToString(AioNode node);
const char *AioNodeToShortString(AioNode node);
AioNode StringToAioNode(const char *str);
bool IsQ7Node(AioNode node);
bool IsTms570Node(AioNode node);
bool IsValidNode(AioNode node);
bool IsRemoteCommandNode(AioNode node);
bool IsWingNode(AioNode node);
bool IsGroundStationNode(AioNode node);
bool IsTestFixtureNode(AioNode node);
bool IsBattNode(AioNode node);
bool IsCmdNode(AioNode node);
bool IsControllerNode(AioNode node);
bool IsCoreSwitchNode(AioNode node);
bool IsDrumNode(AioNode node);
bool IsDynoMotorNode(AioNode node);
bool IsEopNode(AioNode node);
bool IsFlightComputerNode(AioNode node);
bool IsGpsNode(AioNode node);
bool IsGroundPowerQ7Node(AioNode node);
bool IsGroundPowerTms570Node(AioNode node);
bool IsGsEstimatorNode(AioNode node);
bool IsJoystickNode(AioNode node);
bool IsLightNode(AioNode node);
bool IsLoadcellNodeNode(AioNode node);
bool IsMotorNode(AioNode node);
bool IsMvlvNode(AioNode node);
bool IsOperatorNode(AioNode node);
bool IsPlatformNode(AioNode node);
bool IsPlcGs02Node(AioNode node);
bool IsPlcTophatNode(AioNode node);
bool IsRecorderQ7Node(AioNode node);
bool IsRecorderTms570Node(AioNode node);
bool IsServoNode(AioNode node);
bool IsShortStackNode(AioNode node);
bool IsSimulatedJoystickNode(AioNode node);
bool IsSimulatorNode(AioNode node);
bool IsTelemetrySnapshotNode(AioNode node);
bool IsTorqueCellNode(AioNode node);
bool IsUnknownNode(AioNode node);
bool IsUwbNode(AioNode node);
bool IsVisualizerNode(AioNode node);

#ifdef __cplusplus
}  // extern "C"
#endif

#endif  // AVIONICS_NETWORK_AIO_NODE_H_
