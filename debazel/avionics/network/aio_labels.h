#ifndef AVIONICS_NETWORK_AIO_LABELS_H_
#define AVIONICS_NETWORK_AIO_LABELS_H_

// Generated by generate_aio_labels.py; do not edit.

#include "avionics/network/aio_node.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
  kBattLabelForceSigned = -1,
  kBattA,
  kBattB,
  kNumBatts
} BattLabel;

typedef enum {
  kCmdLabelForceSigned = -1,
  kCmdFlightSpare,
  kCmdLoggerA,
  kCmdLoggerB,
  kCmdWebmonitor,
  kNumCmds
} CmdLabel;

typedef enum {
  kControllerLabelForceSigned = -1,
  kControllerA,
  kControllerB,
  kControllerC,
  kNumControllers
} ControllerLabel;

typedef enum {
  kCoreSwitchLabelForceSigned = -1,
  kCoreSwitchA,
  kCoreSwitchB,
  kCoreSwitchDynoA,
  kCoreSwitchDynoB,
  kCoreSwitchGsA,
  kCoreSwitchGsB,
  kNumCoreSwitches
} CoreSwitchLabel;

typedef enum {
  kDrumLabelForceSigned = -1,
  kDrumSensorsA,
  kDrumSensorsB,
  kNumDrums
} DrumLabel;

typedef enum {
  kDynoMotorLabelForceSigned = -1,
  kDynoMotorSbo,
  kDynoMotorSbi,
  kDynoMotorPbi,
  kDynoMotorPbo,
  kDynoMotorPto,
  kDynoMotorPti,
  kDynoMotorSti,
  kDynoMotorSto,
  kNumDynoMotors
} DynoMotorLabel;

typedef enum {
  kEopLabelForceSigned = -1,
  kEopGsB,
  kEopWingB,
  kNumEops
} EopLabel;

typedef enum {
  kFlightComputerLabelForceSigned = -1,
  kFlightComputerA,
  kFlightComputerB,
  kFlightComputerC,
  kNumFlightComputers
} FlightComputerLabel;

typedef enum {
  kGpsLabelForceSigned = -1,
  kGpsBaseStation,
  kNumGpses
} GpsLabel;

typedef enum {
  kGroundPowerQ7LabelForceSigned = -1,
  kGroundPowerQ7A,
  kNumGroundPowerQ7s
} GroundPowerQ7Label;

typedef enum {
  kGroundPowerTms570LabelForceSigned = -1,
  kGroundPowerTms570A,
  kNumGroundPowerTms570s
} GroundPowerTms570Label;

typedef enum {
  kGsEstimatorLabelForceSigned = -1,
  kGsEstimator,
  kNumGsEstimators
} GsEstimatorLabel;

typedef enum {
  kJoystickLabelForceSigned = -1,
  kJoystickA,
  kNumJoysticks
} JoystickLabel;

typedef enum {
  kLightLabelForceSigned = -1,
  kLightPort,
  kLightStbd,
  kLightTailBottom,
  kLightTailTop,
  kNumLights
} LightLabel;

typedef enum {
  kLoadcellNodeLabelForceSigned = -1,
  kLoadcellNodePortA,
  kLoadcellNodePortB,
  kLoadcellNodeStarboardA,
  kLoadcellNodeStarboardB,
  kNumLoadcellNodes
} LoadcellNodeLabel;

typedef enum {
  kMotorLabelForceSigned = -1,
  kMotorSbo,
  kMotorSbi,
  kMotorPbi,
  kMotorPbo,
  kMotorPto,
  kMotorPti,
  kMotorSti,
  kMotorSto,
  kNumMotors
} MotorLabel;

typedef enum {
  kMvlvLabelForceSigned = -1,
  kMvlv,
  kNumMvlvs
} MvlvLabel;

typedef enum {
  kOperatorLabelForceSigned = -1,
  kOperator,
  kNumOperators
} OperatorLabel;

typedef enum {
  kPlatformLabelForceSigned = -1,
  kPlatformSensorsA,
  kPlatformSensorsB,
  kNumPlatforms
} PlatformLabel;

typedef enum {
  kPlcGs02LabelForceSigned = -1,
  kPlcGs02,
  kNumPlcGs02s
} PlcGs02Label;

typedef enum {
  kPlcTophatLabelForceSigned = -1,
  kPlcTophat,
  kNumPlcTophats
} PlcTophatLabel;

typedef enum {
  kRecorderQ7LabelForceSigned = -1,
  kRecorderQ7Platform,
  kRecorderQ7Wing,
  kNumRecorderQ7s
} RecorderQ7Label;

typedef enum {
  kRecorderTms570LabelForceSigned = -1,
  kRecorderTms570Platform,
  kRecorderTms570Wing,
  kNumRecorderTms570s
} RecorderTms570Label;

typedef enum {
  kServoLabelForceSigned = -1,
  kServoA1,
  kServoA2,
  kServoA4,
  kServoA5,
  kServoA7,
  kServoA8,
  kServoE1,
  kServoE2,
  kServoR1,
  kServoR2,
  kNumServos
} ServoLabel;

typedef enum {
  kShortStackLabelForceSigned = -1,
  kShortStack,
  kNumShortStacks
} ShortStackLabel;

typedef enum {
  kSimulatedJoystickLabelForceSigned = -1,
  kSimulatedJoystick,
  kNumSimulatedJoysticks
} SimulatedJoystickLabel;

typedef enum {
  kSimulatorLabelForceSigned = -1,
  kSimulator,
  kNumSimulators
} SimulatorLabel;

typedef enum {
  kTelemetrySnapshotLabelForceSigned = -1,
  kTelemetrySnapshot,
  kNumTelemetrySnapshots
} TelemetrySnapshotLabel;

typedef enum {
  kTorqueCellLabelForceSigned = -1,
  kTorqueCell,
  kNumTorqueCells
} TorqueCellLabel;

typedef enum {
  kUwbLabelForceSigned = -1,
  kUwbA,
  kUwbB,
  kUwbC,
  kUwbD,
  kNumUwbs
} UwbLabel;

typedef enum {
  kVisualizerLabelForceSigned = -1,
  kVisualizer,
  kNumVisualizers
} VisualizerLabel;

AioNode BattLabelToBattAioNode(BattLabel batt_label);
BattLabel BattAioNodeToBattLabel(AioNode batt_node);
AioNode CmdLabelToCmdAioNode(CmdLabel cmd_label);
CmdLabel CmdAioNodeToCmdLabel(AioNode cmd_node);
AioNode ControllerLabelToControllerAioNode(ControllerLabel controller_label);
ControllerLabel ControllerAioNodeToControllerLabel(AioNode controller_node);
AioNode CoreSwitchLabelToCoreSwitchAioNode(CoreSwitchLabel core_switch_label);
CoreSwitchLabel CoreSwitchAioNodeToCoreSwitchLabel(AioNode core_switch_node);
AioNode DrumLabelToDrumAioNode(DrumLabel drum_label);
DrumLabel DrumAioNodeToDrumLabel(AioNode drum_node);
AioNode DynoMotorLabelToDynoMotorAioNode(DynoMotorLabel dyno_motor_label);
DynoMotorLabel DynoMotorAioNodeToDynoMotorLabel(AioNode dyno_motor_node);
AioNode EopLabelToEopAioNode(EopLabel eop_label);
EopLabel EopAioNodeToEopLabel(AioNode eop_node);
AioNode FlightComputerLabelToFlightComputerAioNode(FlightComputerLabel flight_computer_label);
FlightComputerLabel FlightComputerAioNodeToFlightComputerLabel(AioNode flight_computer_node);
AioNode GpsLabelToGpsAioNode(GpsLabel gps_label);
GpsLabel GpsAioNodeToGpsLabel(AioNode gps_node);
AioNode GroundPowerQ7LabelToGroundPowerQ7AioNode(GroundPowerQ7Label ground_power_q7_label);
GroundPowerQ7Label GroundPowerQ7AioNodeToGroundPowerQ7Label(AioNode ground_power_q7_node);
AioNode GroundPowerTms570LabelToGroundPowerTms570AioNode(GroundPowerTms570Label ground_power_tms570_label);
GroundPowerTms570Label GroundPowerTms570AioNodeToGroundPowerTms570Label(AioNode ground_power_tms570_node);
AioNode GsEstimatorLabelToGsEstimatorAioNode(GsEstimatorLabel gs_estimator_label);
GsEstimatorLabel GsEstimatorAioNodeToGsEstimatorLabel(AioNode gs_estimator_node);
AioNode JoystickLabelToJoystickAioNode(JoystickLabel joystick_label);
JoystickLabel JoystickAioNodeToJoystickLabel(AioNode joystick_node);
AioNode LightLabelToLightAioNode(LightLabel light_label);
LightLabel LightAioNodeToLightLabel(AioNode light_node);
AioNode LoadcellNodeLabelToLoadcellNodeAioNode(LoadcellNodeLabel loadcell_node_label);
LoadcellNodeLabel LoadcellNodeAioNodeToLoadcellNodeLabel(AioNode loadcell_node_node);
AioNode MotorLabelToMotorAioNode(MotorLabel motor_label);
MotorLabel MotorAioNodeToMotorLabel(AioNode motor_node);
AioNode MvlvLabelToMvlvAioNode(MvlvLabel mvlv_label);
MvlvLabel MvlvAioNodeToMvlvLabel(AioNode mvlv_node);
AioNode OperatorLabelToOperatorAioNode(OperatorLabel operator_label);
OperatorLabel OperatorAioNodeToOperatorLabel(AioNode operator_node);
AioNode PlatformLabelToPlatformAioNode(PlatformLabel platform_label);
PlatformLabel PlatformAioNodeToPlatformLabel(AioNode platform_node);
AioNode PlcGs02LabelToPlcGs02AioNode(PlcGs02Label plc_gs02_label);
PlcGs02Label PlcGs02AioNodeToPlcGs02Label(AioNode plc_gs02_node);
AioNode PlcTophatLabelToPlcTophatAioNode(PlcTophatLabel plc_tophat_label);
PlcTophatLabel PlcTophatAioNodeToPlcTophatLabel(AioNode plc_tophat_node);
AioNode RecorderQ7LabelToRecorderQ7AioNode(RecorderQ7Label recorder_q7_label);
RecorderQ7Label RecorderQ7AioNodeToRecorderQ7Label(AioNode recorder_q7_node);
AioNode RecorderTms570LabelToRecorderTms570AioNode(RecorderTms570Label recorder_tms570_label);
RecorderTms570Label RecorderTms570AioNodeToRecorderTms570Label(AioNode recorder_tms570_node);
AioNode ServoLabelToServoAioNode(ServoLabel servo_label);
ServoLabel ServoAioNodeToServoLabel(AioNode servo_node);
AioNode ShortStackLabelToShortStackAioNode(ShortStackLabel short_stack_label);
ShortStackLabel ShortStackAioNodeToShortStackLabel(AioNode short_stack_node);
AioNode SimulatedJoystickLabelToSimulatedJoystickAioNode(SimulatedJoystickLabel simulated_joystick_label);
SimulatedJoystickLabel SimulatedJoystickAioNodeToSimulatedJoystickLabel(AioNode simulated_joystick_node);
AioNode SimulatorLabelToSimulatorAioNode(SimulatorLabel simulator_label);
SimulatorLabel SimulatorAioNodeToSimulatorLabel(AioNode simulator_node);
AioNode TelemetrySnapshotLabelToTelemetrySnapshotAioNode(TelemetrySnapshotLabel telemetry_snapshot_label);
TelemetrySnapshotLabel TelemetrySnapshotAioNodeToTelemetrySnapshotLabel(AioNode telemetry_snapshot_node);
AioNode TorqueCellLabelToTorqueCellAioNode(TorqueCellLabel torque_cell_label);
TorqueCellLabel TorqueCellAioNodeToTorqueCellLabel(AioNode torque_cell_node);
AioNode UwbLabelToUwbAioNode(UwbLabel uwb_label);
UwbLabel UwbAioNodeToUwbLabel(AioNode uwb_node);
AioNode VisualizerLabelToVisualizerAioNode(VisualizerLabel visualizer_label);
VisualizerLabel VisualizerAioNodeToVisualizerLabel(AioNode visualizer_node);
const char *BattLabelToString(BattLabel batt_label);
const char *CmdLabelToString(CmdLabel cmd_label);
const char *ControllerLabelToString(ControllerLabel controller_label);
const char *CoreSwitchLabelToString(CoreSwitchLabel core_switch_label);
const char *DrumLabelToString(DrumLabel drum_label);
const char *DynoMotorLabelToString(DynoMotorLabel dyno_motor_label);
const char *EopLabelToString(EopLabel eop_label);
const char *FlightComputerLabelToString(FlightComputerLabel flight_computer_label);
const char *GpsLabelToString(GpsLabel gps_label);
const char *GroundPowerQ7LabelToString(GroundPowerQ7Label ground_power_q7_label);
const char *GroundPowerTms570LabelToString(GroundPowerTms570Label ground_power_tms570_label);
const char *GsEstimatorLabelToString(GsEstimatorLabel gs_estimator_label);
const char *JoystickLabelToString(JoystickLabel joystick_label);
const char *LightLabelToString(LightLabel light_label);
const char *LoadcellNodeLabelToString(LoadcellNodeLabel loadcell_node_label);
const char *MotorLabelToString(MotorLabel motor_label);
const char *MvlvLabelToString(MvlvLabel mvlv_label);
const char *OperatorLabelToString(OperatorLabel operator_label);
const char *PlatformLabelToString(PlatformLabel platform_label);
const char *PlcGs02LabelToString(PlcGs02Label plc_gs02_label);
const char *PlcTophatLabelToString(PlcTophatLabel plc_tophat_label);
const char *RecorderQ7LabelToString(RecorderQ7Label recorder_q7_label);
const char *RecorderTms570LabelToString(RecorderTms570Label recorder_tms570_label);
const char *ServoLabelToString(ServoLabel servo_label);
const char *ShortStackLabelToString(ShortStackLabel short_stack_label);
const char *SimulatedJoystickLabelToString(SimulatedJoystickLabel simulated_joystick_label);
const char *SimulatorLabelToString(SimulatorLabel simulator_label);
const char *TelemetrySnapshotLabelToString(TelemetrySnapshotLabel telemetry_snapshot_label);
const char *TorqueCellLabelToString(TorqueCellLabel torque_cell_label);
const char *UwbLabelToString(UwbLabel uwb_label);
const char *VisualizerLabelToString(VisualizerLabel visualizer_label);
#ifdef __cplusplus
}  // extern "C"
#endif

#endif  // AVIONICS_NETWORK_AIO_LABELS_H_
